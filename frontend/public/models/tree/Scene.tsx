/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.2.14 scene.gltf --t 
Author: twistedc3 (https://sketchfab.com/twistedc3)
License: CC-BY-4.0 (http://creativecommons.org/licenses/by/4.0/)
Source: https://sketchfab.com/3d-models/low-poly-tree-a65141ab47d04842b36009434476c6c2
Title: Low Poly Tree
*/

import * as THREE from 'three'
import React, { useRef } from 'react'
import { useGLTF } from '@react-three/drei'
import { GLTF } from 'three-stdlib'

type GLTFResult = GLTF & {
  nodes: {
    Icosphere_Material001_0: THREE.Mesh
  }
  materials: {
    ['Material.001']: THREE.MeshStandardMaterial
  }
}

type ContextType = Record<string, React.ForwardRefExoticComponent<JSX.IntrinsicElements['mesh']>>

export function Model(props: JSX.IntrinsicElements['group']) {
  const { nodes, materials } = useGLTF('/scene.gltf') as GLTFResult
  return (
    <group {...props} dispose={null}>
      <mesh geometry={nodes.Icosphere_Material001_0.geometry} material={materials['Material.001']} position={[-174.538, 731.059, 0]} rotation={[-Math.PI / 2, 0, 0]} scale={[235.617, 235.617, 176.333]} />
    </group>
  )
}

useGLTF.preload('/scene.gltf')
